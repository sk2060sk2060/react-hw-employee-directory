{"version":3,"sources":["components/EmployeeCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["EmployeeCard","props","className","alt","name","src","image","department","title","Wrapper","children","Departments","label","value","employeeList","employees","App","state","handleChange","event","console","log","filter","employee","sortByName","setState","employeeArray","sort","a","b","nameA","toUpperCase","nameB","this","employess","options","placeholder","onChange","map","id","key","Component","ReactDOM","render","document","getElementById"],"mappings":"wTA0BeA,MAvBf,SAAsBC,GACpB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAEnC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMG,MAEhC,4BACE,+CADF,IACgCH,EAAMM,YAEtC,4BACE,0CADF,IAC2BN,EAAMO,W,MCX5BC,MAJf,SAAiBR,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,W,OCGnCC,EAAc,CAClB,CAAEC,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,uBAAwBC,MAAO,wBACxC,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,iBAAkBC,MAAO,mBAG9BC,EAAeC,EA0ENC,E,4MArEbC,MAAQ,CACNF,a,EAOFG,aAAe,SAAAC,GACbC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAMN,OAClB,IAAMN,EAAaY,EAAMN,MACrBE,EAAYD,EACG,aAAfP,IACFQ,EAAYD,EAAaQ,QAAO,SAAAC,GAAQ,OAAIA,EAAShB,aAAeA,MAEtEQ,EAAY,EAAKS,WAAWT,GAC5B,EAAKU,SAAS,CAACV,e,EAGjBS,WAAa,SAAAE,GAcX,OAbAZ,EAAaa,MAAK,SAASC,EAAGC,GAC5B,IAAIC,EAAQF,EAAExB,KAAK2B,cACfC,EAAQH,EAAEzB,KAAK2B,cACnB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAIF,KAEFN,G,kEA7BPO,KAAKR,SAAS,CAACS,UAAWpB,M,+BAkC1B,OACE,kBAAC,EAAD,KACE,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,uBACA,+DACE,kBAAC,IAAD,CACEiC,QAASxB,EACTyB,YAAY,oBACZC,SAAUJ,KAAKf,aACfhB,UAAU,YAKjB+B,KAAKhB,MAAMF,UAAUuB,KAAI,SAAAf,GAAQ,OAChC,kBAAC,EAAD,CACEgB,GAAIhB,EAASgB,GACbC,IAAKjB,EAASgB,GACdnC,KAAMmB,EAASnB,KACfE,MAAOiB,EAASjB,MAChBC,WAAYgB,EAAShB,WACrBC,MAAOe,EAASf,gB,GAhEViC,a,MCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9f56bbcb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction EmployeeCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Department:</strong> {props.department}\n          </li>\n          <li>\n            <strong>Title:</strong> {props.title}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default EmployeeCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport employees from \"./employees.json\";\n\n\nconst Departments = [\n  { label: \"Show All\", value: \"Show All\" },\n  { label: \"Software Development\", value: \"Software Development\" },\n  { label: \"Accounting\", value: \"Accounting\" },\n  { label: \"Marketing\", value: \"Marketing\" },\n  { label: \"Human Resource\", value: \"Human Resource\" },\n];\n\nconst employeeList = employees;\n\nclass App extends Component {\n\n  // Setting this.state.employees to the employees json array\n  state = {\n    employees\n  };\n\n  componentDidMount() {\n    this.setState({employess: employeeList});\n  }\n\n  handleChange = event => {\n    console.log(event);\n    console.log(event.value);\n    const department = event.value;\n    let employees = employeeList;\n    if (department !== \"Show All\") {\n      employees = employeeList.filter(employee => employee.department === department);\n    }\n    employees = this.sortByName(employees);\n    this.setState({employees});\n  };\n\n  sortByName = employeeArray => {\n    employeeList.sort(function(a, b) {\n      var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n      var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n    \n      // names must be equal\n      return 0;\n    });\n    return employeeArray;\n  };\n\n  // Map over this.state.employees and render a employeeCard component for each employee object\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"container\">\n          <div className=\"jumbotron\">\n            <h1 className=\"text-center\">Employees Directory</h1>\n            <div>Filter Employees By Department: \n              <Select \n                options={Departments} \n                placeholder=\"Select Department\"\n                onChange={this.handleChange}\n                className=\"mt-2\"\n              />\n            </div>\n          </div> \n        </div>    \n        {this.state.employees.map(employee => (     \n          <EmployeeCard\n            id={employee.id}\n            key={employee.id}\n            name={employee.name}\n            image={employee.image}\n            department={employee.department}\n            title={employee.title}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}